name: default

on:
  push:
    branches:
      - master

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout code
  #     - uses: actions/checkout@v3

  #     - name: setup node
  #       uses: actions/setup-node@master
  #       with:
  #         node-version: 18

  #     - name: install dependencies
  #       run: |
  #         npm install

  #     - name: build
  #       run: |
  #         npm run build
  #         npm test

  build:
    runs-on: ubuntu-latest
    # needs: tests

    steps:
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push
        uses: docker/build-push-action@v4
        with:
          push: true
          file: Dockerfile
          tags: ${{ secrets.DOCKER_USER }}/ui:latest
          build-args: |
            REACT_APP_SERVER_URL
            PUBLIC_URL
        env:
          REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}
          PUBLIC_URL: ${{ secrets.PUBLIC_URL }}

  deploy:
    environment: production
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@master

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            export HOST="${{ secrets.HOST }}"
            export PORT="${{ secrets.PORT }}"
            export REACT_APP_SERVER_URL="${{ secrets.REACT_APP_SERVER_URL }}"
            export PUBLIC_URL="${{ secrets.PUBLIC_URL }}"
            export DOCKER_USER="${{ secrets.DOCKER_USER }}"

            # login Docker Hub
            # docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
            echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

            cd client
            docker-compose stop
            docker-compose rm -f
            docker-compose pull
            docker-compose up -d
